import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.List;
import static org.evomaster.client.java.controller.api.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;
import static org.evomaster.client.java.controller.expect.ExpectationHandler.expectationHandler;
import  org.evomaster.client.java.controller.expect.ExpectationHandler;
import  io.restassured.path.json.JsonPath;
import  java.util.Arrays;




/**
 * This file was automatically generated by EvoMaster on 2023-04-29T11:40:12.774+05:30[Asia/Calcutta]
 * <br>
 * The generated test suite contains 8 tests
 * <br>
 * Covered targets: 33
 * <br>
 * Used time: 0h 1m 0s
 * <br>
 * Needed budget for current results: 81%
 * <br>
 * This file contains test cases that are likely to indicate faults.
 */
public class EvoMaster_faults_Test {

    
    private static String baseUrlOfSut = "http://localhost:8080";
    /** [ems] - expectations master switch - is the variable that activates/deactivates expectations individual test cases
    * by default, expectations are turned off. The variable needs to be set to [true] to enable expectations
    */
    private static boolean ems = false;
    /**
    * sco - supported code oracle - checking that the response status code is among those supported according to the schema
    */
    private static boolean sco = false;
    
    
    @BeforeClass
    public static void initClass() {
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    
    
    
    
    
    
    /**
    * [test_0_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    */
    @Test(timeout = 60000)
    public void test_0_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .get(baseUrlOfSut + "/users/785/posts/A91A")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'message'", containsString("EntityRepresentationModel not found!"))
                .body("'details'", containsString("uri=/users/785/posts/A91A"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 401, 403, 404).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_1_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    */
    @Test(timeout = 60000)
    public void test_1_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .delete(baseUrlOfSut + "/posts/851/user")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'message'", containsString("EntityRepresentationModel not found!"))
                .body("'details'", containsString("uri=/posts/851/user"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_2_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_1
    */
    @Test(timeout = 60000)
    public void test_2_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .delete(baseUrlOfSut + "/jpa/users/369")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'message'", containsString("No class com.in28minutes.rest.webservices.restfulwebservices.user.User entity with id 369 exists!"))
                .body("'details'", containsString("uri=/jpa/users/369"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_3_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    */
    @Test(timeout = 60000)
    public void test_3_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .delete(baseUrlOfSut + "/users/686/posts")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'message'", containsString("EntityRepresentationModel not found!"))
                .body("'details'", containsString("uri=/users/686/posts"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_4_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    */
    @Test(timeout = 60000)
    public void test_4_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .delete(baseUrlOfSut + "/users/826/posts/6")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'message'", containsString("EntityRepresentationModel not found!"))
                .body("'details'", containsString("uri=/users/826/posts/6"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_5_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/hal+json")
                .get(baseUrlOfSut + "/posts/709/user")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/hal+json")
                .body("'message'", containsString("EntityRepresentationModel not found!"))
                .body("'details'", containsString("uri=/posts/709/user"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 401, 403, 404).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_6_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("application/hal+json")
                .get(baseUrlOfSut + "/users/595/posts")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/hal+json")
                .body("'message'", containsString("EntityRepresentationModel not found!"))
                .body("'details'", containsString("uri=/users/595/posts"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 401, 403, 404).contains(res_0.extract().statusCode()));
    }
    
    
    /**
    * [test_7_with500] is a part of 1 or more clusters, as defined by the selected clustering options. 
    * ErrorText_0
    * ErrorText_1
    */
    @Test(timeout = 60000)
    public void test_7_with500() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .contentType("application/json")
                .body(" { " + 
                    " \"birthDate\": \"1947-09-30T25:00:08\", " + 
                    " \"id\": 835, " + 
                    " \"name\": \"X2F1\", " + 
                    " \"posts\": [ " + 
                    " { " + 
                    " \"description\": \"_IN_tsbcr\", " + 
                    " \"id\": 982 " + 
                    " }, " + 
                    " { " + 
                    " \"description\": \"ak\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 799 " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/jpa/users")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'message'", containsString("Unable to find com.in28minutes.rest.webservices.restfulwebservices.user.Post with id 982; nested exception is javax.persistence.EntityNotFoundException: Unable to find com.in28minutes.rest.webservices.restfulwebservices.user.Post with id 982"))
                .body("'details'", containsString("uri=/jpa/users"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 201, 401, 403, 404).contains(res_0.extract().statusCode()));
        
        ValidatableResponse res_1 = given().accept("*/*")
                .delete(baseUrlOfSut + "/users/61/posts")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'message'", containsString("EntityRepresentationModel not found!"))
                .body("'details'", containsString("uri=/users/61/posts"));
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 204, 401, 403).contains(res_1.extract().statusCode()));
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/users/993")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'message'", containsString("id-993"))
                .body("'details'", containsString("uri=/users/993"));
        
    }


}

{
 "testsuite": [
  {
   "name": "Operation Coverage (Suite)",
   "description": "Percentage of API operations covered by all the test cases",
   "value": 85.0,
   "explanation": "Total number of operations is 20 and covered is 17",
   "details": {
    "Operations covered": [
     "checkinPacientUsingPOST",
     "findAllProductByUsingGET",
     "findHospitalNearHospitalByUsingGET",
     "verificaLeitosDisponiveisUsingGET",
     "findProductByUsingGET",
     "findPatientsUsingGET",
     "insertUsingPOST_1",
     "findLocationNearHospitalByUsingGET",
     "updatePatientUsingPUT",
     "findByIdUsingGET",
     "findPatientByIdUsingGET",
     "transferenciaProdutoUsingPOST",
     "deleteByIdUsingDELETE",
     "updateUsingPUT_1",
     "deleteUsingDELETE",
     "updateUsingPUT",
     "checkoutPacientUsingPOST"
    ],
    "Operations missed": [
     "findAllUsingGET",
     "hospitalMaisProximoUsingGET",
     "insertUsingPOST"
    ]
   }
  },
  {
   "name": "Parameter coverage",
   "description": "Percentage of parameters in the API that are covered",
   "value": 68.6,
   "explanation": "Total number of parameters is 35 and covered parameters is 24",
   "details": {
    "Parameters covered": {
     "findByIdUsingGET": [
      "findByIdUsingGET.path.hospital_id"
     ],
     "updateUsingPUT": [
      "updateUsingPUT.path.hospital_id"
     ],
     "deleteByIdUsingDELETE": [
      "deleteByIdUsingDELETE.path.hospital_id"
     ],
     "findAllProductByUsingGET": [
      "findAllProductByUsingGET.path.hospital_id"
     ],
     "insertUsingPOST_1": [
      "insertUsingPOST_1.path.hospital_id"
     ],
     "findProductByUsingGET": [
      "findProductByUsingGET.path.produto_id",
      "findProductByUsingGET.path.hospital_id"
     ],
     "updateUsingPUT_1": [
      "updateUsingPUT_1.path.hospital_id",
      "updateUsingPUT_1.path.produto_id"
     ],
     "deleteUsingDELETE": [
      "deleteUsingDELETE.path.produto_id",
      "deleteUsingDELETE.path.hospital_id"
     ],
     "findHospitalNearHospitalByUsingGET": [
      "findHospitalNearHospitalByUsingGET.path.hospital_id",
      "findHospitalNearHospitalByUsingGET.query.raio"
     ],
     "findPatientsUsingGET": [
      "findPatientsUsingGET.path.hospital_id"
     ],
     "checkinPacientUsingPOST": [
      "checkinPacientUsingPOST.path.hospital_id"
     ],
     "checkoutPacientUsingPOST": [
      "checkoutPacientUsingPOST.path.hospital_id"
     ],
     "findPatientByIdUsingGET": [
      "findPatientByIdUsingGET.path.patientId",
      "findPatientByIdUsingGET.path.hospital_id"
     ],
     "updatePatientUsingPUT": [
      "updatePatientUsingPUT.path.patientId",
      "updatePatientUsingPUT.path.hospital_id"
     ],
     "findLocationNearHospitalByUsingGET": [
      "findLocationNearHospitalByUsingGET.path.hospital_id"
     ],
     "verificaLeitosDisponiveisUsingGET": [
      "verificaLeitosDisponiveisUsingGET.path.id"
     ],
     "transferenciaProdutoUsingPOST": [
      "transferenciaProdutoUsingPOST.path.productId",
      "transferenciaProdutoUsingPOST.path.id"
     ]
    },
    "Parameters missed": {
     "insertUsingPOST": [
      "insertUsingPOST.request-body.objDTO"
     ],
     "hospitalMaisProximoUsingGET": [
      "hospitalMaisProximoUsingGET.query.lat",
      "hospitalMaisProximoUsingGET.query.lon",
      "hospitalMaisProximoUsingGET.query.raioMaximo"
     ],
     "updateUsingPUT": [
      "updateUsingPUT.request-body.objDTO"
     ],
     "insertUsingPOST_1": [
      "insertUsingPOST_1.request-body.productDTO"
     ],
     "updateUsingPUT_1": [
      "updateUsingPUT_1.request-body.productDTO"
     ],
     "checkinPacientUsingPOST": [
      "checkinPacientUsingPOST.request-body.patient"
     ],
     "checkoutPacientUsingPOST": [
      "checkoutPacientUsingPOST.request-body.idPatient"
     ],
     "updatePatientUsingPUT": [
      "updatePatientUsingPUT.request-body.patient"
     ],
     "transferenciaProdutoUsingPOST": [
      "transferenciaProdutoUsingPOST.request-body.quantidade"
     ]
    }
   }
  }
 ],
 "runtime": [
  {
   "name": "Operation Coverage (Runtime Unique)",
   "description": "Percentage of test suite operations successfully covered (2xx) at runtime",
   "value_success": 17.6,
   "value_failure": 0.0,
   "value_invalid": 100.0,
   "explanation": "Total number of test suite operations is 17 and successfully covered is 3",
   "details": {
    "Operations successful": [
     "findPatientByIdUsingGET",
     "findAllProductByUsingGET",
     "updatePatientUsingPUT"
    ],
    "Operations failed": [],
    "Operations invalid": [
     "checkinPacientUsingPOST",
     "findAllProductByUsingGET",
     "findHospitalNearHospitalByUsingGET",
     "verificaLeitosDisponiveisUsingGET",
     "findProductByUsingGET",
     "findPatientsUsingGET",
     "insertUsingPOST_1",
     "findLocationNearHospitalByUsingGET",
     "updatePatientUsingPUT",
     "findByIdUsingGET",
     "findPatientByIdUsingGET",
     "transferenciaProdutoUsingPOST",
     "deleteByIdUsingDELETE",
     "updateUsingPUT_1",
     "deleteUsingDELETE",
     "updateUsingPUT",
     "checkoutPacientUsingPOST"
    ]
   }
  },
  {
   "name": "Operation Coverage (Runtime Instance-wise)",
   "description": "Percentage of test suite operation instances successfully covered (2xx) at runtime",
   "value_success": 8.1,
   "value_failure": 0.0,
   "value_invalid": 91.9,
   "explanation": "Total number of test suite operations is 37 and successfully covered is 3",
   "details": {
    "Operations successful": [
     "findPatientByIdUsingGET",
     "findAllProductByUsingGET",
     "updatePatientUsingPUT"
    ],
    "Operations failed": [],
    "Operations invalid": [
     "checkinPacientUsingPOST",
     "findAllProductByUsingGET",
     "findHospitalNearHospitalByUsingGET",
     "verificaLeitosDisponiveisUsingGET",
     "findProductByUsingGET",
     "findPatientsUsingGET",
     "insertUsingPOST_1",
     "findLocationNearHospitalByUsingGET",
     "updatePatientUsingPUT",
     "findByIdUsingGET",
     "findPatientByIdUsingGET",
     "transferenciaProdutoUsingPOST",
     "deleteByIdUsingDELETE",
     "updateUsingPUT_1",
     "deleteUsingDELETE",
     "updateUsingPUT",
     "checkoutPacientUsingPOST"
    ]
   }
  },
  {
   "name": "Output status code coverage",
   "description": "Percentage of status codes covered for all operations, as obtained in API responses",
   "value": 25.0,
   "explanation": "Total number of status codes in API is 88 and codes covered is 22",
   "details": {
    "Missed response codes": {
     "findAllUsingGET": [
      "404",
      "200",
      "403",
      "401"
     ],
     "insertUsingPOST": [
      "201",
      "403",
      "404",
      "200",
      "401"
     ],
     "hospitalMaisProximoUsingGET": [
      "404",
      "200",
      "403",
      "401"
     ],
     "findByIdUsingGET": [
      "200",
      "403",
      "401"
     ],
     "updateUsingPUT": [
      "403",
      "200",
      "201",
      "404",
      "401"
     ],
     "deleteByIdUsingDELETE": [
      "401",
      "200",
      "403",
      "204"
     ],
     "findAllProductByUsingGET": [
      "404",
      "403",
      "401"
     ],
     "insertUsingPOST_1": [
      "403",
      "200",
      "201",
      "404",
      "401"
     ],
     "findProductByUsingGET": [
      "200",
      "403",
      "401"
     ],
     "updateUsingPUT_1": [
      "403",
      "200",
      "201",
      "404",
      "401"
     ],
     "deleteUsingDELETE": [
      "401",
      "200",
      "403",
      "204"
     ],
     "findHospitalNearHospitalByUsingGET": [
      "404",
      "200",
      "403",
      "401"
     ],
     "findPatientsUsingGET": [
      "200",
      "403",
      "401"
     ],
     "checkinPacientUsingPOST": [
      "201",
      "200",
      "403",
      "401"
     ],
     "checkoutPacientUsingPOST": [
      "201",
      "200",
      "403",
      "401"
     ],
     "findPatientByIdUsingGET": [
      "403",
      "401"
     ],
     "updatePatientUsingPUT": [
      "201",
      "403",
      "401"
     ],
     "findLocationNearHospitalByUsingGET": [
      "404",
      "200",
      "403",
      "401"
     ],
     "verificaLeitosDisponiveisUsingGET": [
      "404",
      "200",
      "403",
      "401"
     ],
     "transferenciaProdutoUsingPOST": [
      "403",
      "200",
      "201",
      "404",
      "401"
     ]
    }
   }
  },
  {
   "name": "Parameter coverage",
   "description": "Percentage of executed parameters in the API that are successfully covered",
   "value_success": 20.8,
   "value_failure": 0.0,
   "value_invalid": 100.0,
   "explanation": "Total number of parameters used in runs is 24 and covered successful parameters is {'findAllProductByUsingGET': ['findAllProductByUsingGET.path.hospital_id'], 'findPatientByIdUsingGET': ['findPatientByIdUsingGET.path.patientId', 'findPatientByIdUsingGET.path.hospital_id'], 'updatePatientUsingPUT': ['updatePatientUsingPUT.path.patientId', 'updatePatientUsingPUT.path.hospital_id']}",
   "details": {
    "Parameters covered": {
     "findAllProductByUsingGET": [
      "findAllProductByUsingGET.path.hospital_id"
     ],
     "findPatientByIdUsingGET": [
      "findPatientByIdUsingGET.path.patientId",
      "findPatientByIdUsingGET.path.hospital_id"
     ],
     "updatePatientUsingPUT": [
      "updatePatientUsingPUT.path.patientId",
      "updatePatientUsingPUT.path.hospital_id"
     ]
    },
    "Parameters missed": {}
   }
  }
 ],
 "Number of TestOp Executions": 37,
 "Number of 2xx": 3,
 "Number of 4xx": 34,
 "Number of 5xx": 0,
 "Number of Sequences": 24,
 "Successful Sequences": 2
}